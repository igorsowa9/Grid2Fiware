1.

curl -iX POST \
  'http://localhost:1026/v2/entities' \
  -H 'Content-Type: application/json' \
  -H 'fiware-service: fmu' \
  -H 'fiware-servicepath: /' \
  -d '{
                "id": "Simulation:1",
                "type": "FMU",
                "slackP": {
                  "value": 17.23
                },
                "pQLoadProfileP": {
                  "value": 1.23
                },
                "solarGeneratorP": {
                  "value": 1.23
                },
                "SimTime": {
                  "value": 0
                } 
}
'

2. 
curl -iX POST \
  'http://localhost:4041/iot/services' \
  -H 'Content-Type: application/json' \
  -H 'fiware-service: fmu' \
  -H 'fiware-servicepath: /' \
  -d '  {
                "services": [
                               {
                                               "apikey": "1234",
                                               "cbroker": "http://orion:1026",
                                               "entity_type": "FMU",
                                               "resource": "/iot/d"
                               }
                ]
}
'

3.
curl -iX POST \
  'http://localhost:4041/iot/devices' \
  -H 'Content-Type: application/json' \
  -H 'fiware-service: fmu' \
  -H 'fiware-servicepath: /' \
  -d '{
"devices": [
   {
     "device_id":   "fmu",
     "entity_name": "Simulation:1",
     "entity_type": "FMU",
     "protocol":    "PDI-IoTA-UltraLight",
     "transport":   "MQTT",
     "timezone":    "Europe/Berlin",
     "attributes": [
       { "object_id": "sp", "name": "slackP", "type": "Number" },
                                               { "object_id": "pqp", "name": "pQLoadProfileP", "type": "Number" },
                                               { "object_id": "sgp", "name": "solarGeneratorP", "type": "Number" },
                                               { "object_id": "st", "name": "SimTime", "type": "Number" }
    ]
               }
]
}
'

4.
curl -iX POST \
  'http://localhost:1026/v2/subscriptions/' \
  -H 'Content-Type: application/json' \
  -H 'fiware-service: fmu' \
  -H 'fiware-servicepath: /' \
  -d '{
               "description": "Notification Quantumleap",
               "subject": {
                               "entities": [
                                               {
                                                               "id": "Simulation:1",
                                                               "type": "FMU"
                                               }
                               ],
                               "condition": {
                                               "attrs": [
                                                               "slackP",
                                                               "pQLoadProfileP",
                                                               "solarGeneratorP",
                                                               "SimTime"
                                               ]
                               }
               },
               "notification": {
                 "http": {
                    "url": "http://quantumleap:8668/v2/notify"
    },
    "attrs": [
                                                               "slackP",
                                                               "pQLoadProfileP",
                                                               "solarGeneratorP",
                                                               "SimTime"
                                               ],
    "metadata": ["dateCreated", "dateModifid"]
               },
                               "throttling": 0 
}
'

mosquitto_pub -t "/1234/fmu/attrs" -h localhost -m "sp|12"


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%% connection of the sensor %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1:  provision service group on IoT:  (replace IP with your IP!!!!!!!!!)


POST
http://137.226.248.146:4041/iot/services

HEADER:
Content-Type                   application/json
fiware-service                  myservice                   (here you can choose whatever you want,  but use it then in all requests!)
fiware-servicepath         /


BODY: JSON
{
"services": [
   {
     "apikey":      "12345",
     "cbroker":     "http://orion:1026",
     "entity_type": "Device",
     "resource":    "/iot/d"
   }
]
}


2.  provisioning your actuator on IoT:

POST
http://137.226.248.146:4041/iot/devices

HEADER:
Content-Type                   application/json
fiware-service                  myservice                   (here you can choose whatever you want,  but use it then in all requests!)
fiware-servicepath         /



BODY: JSON

{
"devices": [
   {
     "device_id": "thermometer001",                                                                    (this will be your topic fort he subscriber)
     "entity_name": "Thermometer:1",
     "entity_type": "Thermometer",
     "protocol": "PDI-IoTA-JSON",                                                                                              (or PDI-IoTA-Ultralight  )
     "transport": "MQTT",
     "timezone": "Europe/Berlin",
     "commands":[
       {"name": "tmp", "type": "command", "value": "Number"}
     ]
   }
]
}


3: Register Command in OrionCB:
"ENABLING CONTEXT BROKER COMMANDS" in tutorial https://fiware-tutorials.readthedocs.io/en/latest/iot-over-mqtt/index.html
Once the commands have been registered it will be possible to actuate by sending requests to the Orion Context Broker,
rather than sending UltraLight 2.0 requests directly the IoT devices.


POST
http://137.226.248.146:1026/v2/registrations


HEADER:
Content-Type                   application/json
fiware-service                  myservice                   (here you can choose whatever you want,  but use it then in all requests!)
fiware-servicepath         /



BODY: JSON
{
  "description": "New Commands",
  "dataProvided": {
    "entities": [
      {
        "id": "Thermometer:1", "type": "Thermometer"
      }
    ],
    "attrs": [ "tmp"]
  },
  "provider": {
    "http": {"url": "http://orion:1026/v1"},
    "legacyForwarding": true
  }
}


Now you should be able to send a command to your device:

4. Command over OrionCB

PATCH
http://137.226.248.146:1026/v2/entities/Thermometer:1/attrs?type=Thermometer

HEADER:
Content-Type                   application/json
fiware-service                  myservice                   (here you can choose whatever you want,  but use it then in all requests!)
fiware-servicepath         /


BODY: JSON
{
  "tmp": {
      "type" : "command",
      "value" : "16.33"
  }
}


Query data over ID from OrionCB:
GET
http://137.226.248.146:1026/v2/entities/Thermometer:1


HEADER:
Content-Type                   application/json
fiware-service                  myservice                   (here you can choose whatever you want,  but use it then in all requests!)
fiware-servicepath         /

